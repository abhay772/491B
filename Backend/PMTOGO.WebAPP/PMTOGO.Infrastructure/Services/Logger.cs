using AA.PMTOGO.Infrastructure.Interfaces;
using AA.PMTOGO.Models.Entities;

namespace PMTOGO.Infrastructure.Services
{
    public class Logger : ILogger
    {
        public async Task Log(string requestName, byte logLevel, LogCategory logCategory, object result)
        {
            Log log = new()     //create logEntry
            {
                LogLevel = logLevel,
                Category = logCategory.ToString(),
                Message = result.ToString()!,
                Operation = requestName
                //Timestamp is autogenerated with a new instance of Log
            };

            var filePath = string.Format("Logs/{0}.csv", log.LogId);
            await using var writer = new StreamWriter(new FileStream(filePath, FileMode.CreateNew, FileAccess.Write));
            var logObjectProperties = typeof(Log).GetProperties();

            //write to the filestream
            writer.WriteLine("sep=,");
            writer.WriteLine(string.Join(", ", logObjectProperties.Select(x => x.Name)));
            writer.WriteLine(string.Join(", ", logObjectProperties.Select(x => x.GetValue(log, null))));

            //set the new log file as ReadOnly
           File.SetAttributes(filePath, FileAttributes.ReadOnly);
        }
    }
}
